def hierarchy_to_tree(hier):
        tree = dict()
        tree[-1] = []
        node = [-1]

        for i in range(len(hier)):
                tree[i] = []

        for i in range(len(hier)):
                for j in range(len(hier)):
                        if hier[j][3] == node[0]:
                                tree[node[0]].append(j)
                                tree[j].append(node[0])
                                node.append(j)
                node.pop(0)

        return tree


# hier = [[ 6, -1,  1, -1],
#         [ 2, -1, -1,  0],
#         [ 3,  1, -1,  0],
#         [ 4,  2, -1,  0],
#         [ 5,  3, -1,  0],
#         [-1,  4, -1,  0],
#         [11,  0,  7, -1],
#         [ 8, -1, -1,  6],
#         [ 9,  7, -1,  6],
#         [10,  8, -1,  6],
#         [-1,  9, -1,  6],
#         [17,  6, 12, -1],
#         [15, -1, 13, 11],
#         [14, -1, -1, 12],
#         [-1, 13, -1, 12],
#         [16, 12, -1, 11],
#         [-1, 15, -1, 11],
#         [23, 11, 18, -1],
#         [19, -1, -1, 17],
#         [20, 18, -1, 17],
#         [21, 19, -1, 17],
#         [22, 20, -1, 17],
#         [-1, 21, -1, 17],
#         [27, 17, 24, -1],
#         [25, -1, -1, 23],
#         [26, 24, -1, 23],
#         [-1, 25, -1, 23],
#         [32, 23, 28, -1],
#         [29, -1, -1, 27],
#         [30, 28, -1, 27],
#         [31, 29, -1, 27],
#         [-1, 30, -1, 27],
#         [-1, 27, 33, -1],
#         [34, -1, -1, 32],
#         [35, 33, -1, 32],
#         [-1, 34, -1, 32],
#         ]
#
# print(hierarchy_to_tree(hier))